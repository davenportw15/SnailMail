from models import secure_pass

class Users:

  def __init__(self, db):
    self.db = db

  # returns username
  @staticmethod
  def create_user(self, username, password, latitude, longitude):
    sp = secure_pass.Password(password)
    password_key = sp.get_hash()
    password_salt = sp.get_salt()
    cursor = self.db.cursor()

    # if the username exists, throw exception
    cursor.execute("select id from users where username = ?", (username,))
    if cursor.fetchone() is not None:
        raise Exception("User already exists")

    cursor.execute(
      "insert into users (username, password_key, password_salt, latitude, longitude) values (?, ?, ?, ?, ?)",
      (username,
      password_key,
      password_salt,
      latitude,
      longitude)
    )

    self.db.commit()
    cursor.execute("select id from users where username = ?",
            (username,))
    return cursor.fetchone()[0]


  @staticmethod
  def user_exists(self, username, password):
    cursor = self.db.cursor()
    # get the count of users with that username. If the
    # count is greater than one, throw up. If it's zero,
    # return false. Otherwise, procede.
    cursor.execute("select count(id) num from users where username = ?",
            (username,))
    row = cursor.fetchone()
    assert row['num'] < 2
    if row['num'] < 1:
        return False


    # get the salt, key for the username
    cursor.execute("select password_salt, password_key from users where username == ?",
            (username,))
    row = cursor.fetchone()

    salt = row['password_salt']
    key = row['password_key']

    return secure_pass.Password.check_pass(
            password,
            key,
            salt
            )


  @staticmethod
  def get_user(self, id):
    cursor = self.db.cursor()
    cursor.execute(
      "select username, latitude, longitude, id from users where id == ?",
      (id,)
    )
    data = cursor.fetchone()
    return {
      "username": data[0],
      "latitude": data[1],
      "longitude": data[2],
      "id": data[3]
    }

  def get_user_by_username(self, username):
    cursor = self.db.cursor()
    print("username to get is: ",username)
    cursor.execute(
      "select username, latitude, longitude, id from users where username == ?",
      (username,)
    )
    data = cursor.fetchone()
    if data is None:
        raise Exception("No user" + username)
    return {
      "username": data[0],
      "latitude": data[1],
      "longitude": data[2],
      "id": data[3]
    }
